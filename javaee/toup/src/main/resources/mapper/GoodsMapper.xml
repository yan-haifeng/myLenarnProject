<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zime.toup.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.zime.toup.entity.Goods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_stock" jdbcType="INTEGER" property="goodsStock" />
    <result column="goods_city" jdbcType="VARCHAR" property="goodsCity" />
    <result column="goods_specifications" jdbcType="VARCHAR" property="goodsSpecifications" />
    <result column="goods_manufacturer" jdbcType="VARCHAR" property="goodsManufacturer" />
    <result column="goods_date" jdbcType="TIMESTAMP" property="goodsDate" />
    <result column="goods_imgpath" jdbcType="VARCHAR" property="goodsImgpath" />
    <result column="goods_describe" jdbcType="VARCHAR" property="goodsDescribe" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goods_name, goods_price, goods_stock, goods_city, goods_specifications, goods_manufacturer, 
    goods_date, goods_imgpath, goods_describe
  </sql>
  <select id="selectByExample" parameterType="com.zime.toup.entity.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zime.toup.entity.GoodsExample">
    delete from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zime.toup.entity.Goods">
    insert into goods (id, goods_name, goods_price, 
      goods_stock, goods_city, goods_specifications, 
      goods_manufacturer, goods_date, goods_imgpath, 
      goods_describe)
    values (#{id,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, #{goodsPrice,jdbcType=DECIMAL}, 
      #{goodsStock,jdbcType=INTEGER}, #{goodsCity,jdbcType=VARCHAR}, #{goodsSpecifications,jdbcType=VARCHAR}, 
      #{goodsManufacturer,jdbcType=VARCHAR}, #{goodsDate,jdbcType=TIMESTAMP}, #{goodsImgpath,jdbcType=VARCHAR}, 
      #{goodsDescribe,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zime.toup.entity.Goods">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsStock != null">
        goods_stock,
      </if>
      <if test="goodsCity != null">
        goods_city,
      </if>
      <if test="goodsSpecifications != null">
        goods_specifications,
      </if>
      <if test="goodsManufacturer != null">
        goods_manufacturer,
      </if>
      <if test="goodsDate != null">
        goods_date,
      </if>
      <if test="goodsImgpath != null">
        goods_imgpath,
      </if>
      <if test="goodsDescribe != null">
        goods_describe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsStock != null">
        #{goodsStock,jdbcType=INTEGER},
      </if>
      <if test="goodsCity != null">
        #{goodsCity,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpecifications != null">
        #{goodsSpecifications,jdbcType=VARCHAR},
      </if>
      <if test="goodsManufacturer != null">
        #{goodsManufacturer,jdbcType=VARCHAR},
      </if>
      <if test="goodsDate != null">
        #{goodsDate,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsImgpath != null">
        #{goodsImgpath,jdbcType=VARCHAR},
      </if>
      <if test="goodsDescribe != null">
        #{goodsDescribe,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zime.toup.entity.GoodsExample" resultType="java.lang.Long">
    select count(*) from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsStock != null">
        goods_stock = #{record.goodsStock,jdbcType=INTEGER},
      </if>
      <if test="record.goodsCity != null">
        goods_city = #{record.goodsCity,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSpecifications != null">
        goods_specifications = #{record.goodsSpecifications,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsManufacturer != null">
        goods_manufacturer = #{record.goodsManufacturer,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsDate != null">
        goods_date = #{record.goodsDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsImgpath != null">
        goods_imgpath = #{record.goodsImgpath,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsDescribe != null">
        goods_describe = #{record.goodsDescribe,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods
    set id = #{record.id,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_stock = #{record.goodsStock,jdbcType=INTEGER},
      goods_city = #{record.goodsCity,jdbcType=VARCHAR},
      goods_specifications = #{record.goodsSpecifications,jdbcType=VARCHAR},
      goods_manufacturer = #{record.goodsManufacturer,jdbcType=VARCHAR},
      goods_date = #{record.goodsDate,jdbcType=TIMESTAMP},
      goods_imgpath = #{record.goodsImgpath,jdbcType=VARCHAR},
      goods_describe = #{record.goodsDescribe,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zime.toup.entity.Goods">
    update goods
    <set>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsStock != null">
        goods_stock = #{goodsStock,jdbcType=INTEGER},
      </if>
      <if test="goodsCity != null">
        goods_city = #{goodsCity,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpecifications != null">
        goods_specifications = #{goodsSpecifications,jdbcType=VARCHAR},
      </if>
      <if test="goodsManufacturer != null">
        goods_manufacturer = #{goodsManufacturer,jdbcType=VARCHAR},
      </if>
      <if test="goodsDate != null">
        goods_date = #{goodsDate,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsImgpath != null">
        goods_imgpath = #{goodsImgpath,jdbcType=VARCHAR},
      </if>
      <if test="goodsDescribe != null">
        goods_describe = #{goodsDescribe,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zime.toup.entity.Goods">
    update goods
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      goods_stock = #{goodsStock,jdbcType=INTEGER},
      goods_city = #{goodsCity,jdbcType=VARCHAR},
      goods_specifications = #{goodsSpecifications,jdbcType=VARCHAR},
      goods_manufacturer = #{goodsManufacturer,jdbcType=VARCHAR},
      goods_date = #{goodsDate,jdbcType=TIMESTAMP},
      goods_imgpath = #{goodsImgpath,jdbcType=VARCHAR},
      goods_describe = #{goodsDescribe,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>